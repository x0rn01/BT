buildscript {
    repositories {
        mavenCentral()
    }
}

ext.updateVersionProperty = { newVersion ->
    Properties props = new Properties()
    File propsFile = new File('gradle.properties')
    props.load(propsFile.newDataInputStream())

    props.setProperty('version', newVersion)
    props.store(propsFile.newWriter(), null)
}

ext.generateReleaseVersion = {
    Properties props = new Properties()
    File propsFile = new File('gradle.properties')
    props.load(propsFile.newDataInputStream())

    String[] versions = props.getProperty("version").split("\\.")
    String subVersionIncremented = (versions[2].toInteger() + 1)

    String snapShotVersion = "${versions[0]}.${versions[1]}.${subVersionIncremented}-SNAPSHOT"

    props.setProperty('version', snapShotVersion)
    props.store(propsFile.newWriter(), null)

    return snapShotVersion
}

task gitRevision {
    doLast {
        new ByteArrayOutputStream().withStream { os ->
            def result = exec {
                workingDir '.'
                commandLine './git-revision.sh'
                standardOutput = os
            }
            ext.result = os.toString().replaceAll("\\n", "")
        }
    }
}

task commitRelease {
    dependsOn gitRevision
    doLast {
        updateVersionProperty(gitRevision.result)
        exec {
            commandLine = "./git-commit.sh"
            args "[Gradle Release] Version update : ${gitRevision.result}"
            println "executing ${commandLine}"
        }
    }
}

task postReleaseCommit {
    dependsOn commitRelease
    doLast {
        String releaseVersion = generateReleaseVersion()
        exec {
            workingDir '.'
            commandLine './git-commit.sh'
            args "[Gradle Release] Snapshot version update : ${releaseVersion}"
        }
        ext.releaseVersion = releaseVersion.replace("-SNAPSHOT", "")
    }
}

task postReleaseTag {
    dependsOn postReleaseCommit
    doLast {
        String releaseVersion = postReleaseCommit.releaseVersion
        exec {
            workingDir '.'
            commandLine './git-tag.sh'
            args "${releaseVersion}"
        }
        ext.releaseVersion = releaseVersion.replace("-SNAPSHOT", "")
    }
}